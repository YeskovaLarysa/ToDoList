{"version":3,"sources":["store/reducers/btn-reducers.js","store/reducers/index.js","store/store.js","store/dispatchers/btn-dispatchers.js","components/task-list/task-item/btn/Btn.jsx","components/task-list/task-item/TastItem.jsx","components/task-list/TaskList.jsx","components/title/Title.jsx","components/filter/FilrerInput.jsx","components/filter/btn-filter/BtnFilter.jsx","components/filter/BtnFilterList.jsx","components/loader/Loader.jsx","components/form/Form.jsx","components/error/ErrorBoundary.jsx","App.jsx","components/parts/list-getter.js","index.js"],"names":["sliceConfig","name","initialState","displayedTaskStatus","isLoaded","list","inputFilerValue","reducers","setList","state","action","payload","setInputFilerValue","toggleDelete","filter","item","id","toggleActive","map","isActive","toggleImportant","isImportant","btnAdd","date","Date","now","filterBtn","createSlice","reducer","actions","btnReducer","store","configureStore","dispatch","BtnActive","type","className","onClick","BtnImportant","BtnRemove","TastItem","style","color","fontStyle","textDecorationLine","margin","width","border","TaskList","Title","FilrerInput","inputFilter","useSelector","Error","value","onChange","e","BtnFilter","filterType","activeStyle","filterBtnDispatcher","BtnFilterList","activeColor","mainColor","styleAll","backgroundColor","styleActive","styleFinish","Loader","Form","useState","inputFormValue","setInputFormValue","console","log","disabled","preventDefault","target","inputAdd","ErrorBoundary","hasError","error","this","setState","props","children","Component","App","useEffect","Promise","resolve","setTimeout","displayedList","then","data","setListDispatcher","filteredList","newList","toLowerCase","includes","filterList","setInputFilerValueDispatcher","ReactDOM","render","document","getElementById"],"mappings":"8QAEMA,EAAc,CAClBC,KAAM,aACNC,aAAc,CACZC,oBAAqB,EACrBC,UAAU,EACVC,KAAM,KACNC,gBAAiB,IAEnBC,SAAU,CACRC,QAAS,SAACC,EAAOC,GACfD,EAAMJ,KAAOK,EAAOC,QACpBF,EAAML,UAAW,GAEnBQ,mBAAoB,SAACH,EAAOC,GAC1BD,EAAMH,gBAAkBI,EAAOC,SAEjCE,aAAc,SAACJ,EAAOC,GACpB,IAAQL,EAASI,EAATJ,KACRI,EAAMJ,KAAOA,EAAKS,QAAO,SAACC,GAAD,OAAUA,EAAKC,KAAON,EAAOC,YAExDM,aAAc,SAACR,EAAOC,GACpB,IAAQL,EAASI,EAATJ,KACRI,EAAMJ,KAAOA,EAAKa,KAAI,SAACH,GACrB,IAAQC,EAAiBD,EAAjBC,GAAIG,EAAaJ,EAAbI,SAEZ,OAAO,2BACFJ,GADL,IAEEI,SAAUT,EAAOC,UAAYK,GAAMG,EAAWA,QAIpDC,gBAAiB,SAACX,EAAOC,GACvB,IAAQL,EAASI,EAATJ,KACRI,EAAMJ,KAAOA,EAAKa,KAAI,SAACH,GACrB,IAAQC,EAAoBD,EAApBC,GAAIK,EAAgBN,EAAhBM,YAEZ,OAAO,2BACFN,GADL,IAEEM,YAAaX,EAAOC,UAAYK,GAAMK,EAAcA,QAI1DC,OAAQ,SAACb,EAAOC,GACd,IAAQL,EAASI,EAATJ,KACJkB,EAAOC,KAAKC,MAChBhB,EAAMJ,KAAN,sBACKA,GADL,CAEE,CACEW,GAAIO,EACJtB,KAAMS,EAAOC,QACbU,aAAa,EACbF,UAAU,MAIhBO,UAAW,SAACjB,EAAOC,GACM,QAAnBA,EAAOC,UACTF,EAAMN,oBAAsB,GAEP,WAAnBO,EAAOC,UACTF,EAAMN,oBAAsB,GAEP,WAAnBO,EAAOC,UACTF,EAAMN,oBAAsB,MAM7B,EAA6BwB,YAAY3B,GAAjC4B,EAAR,EAAQA,QAASC,EAAjB,EAAiBA,QCrEXD,EAAU,CACrBE,cCAWC,EAAQC,YAAe,CAAEJ,Y,OCA9BK,EAAaF,EAAbE,SAENzB,EAOEqB,EAPFrB,QACAI,EAMEiB,EANFjB,mBACAC,EAKEgB,EALFhB,aACAI,EAIEY,EAJFZ,aACAG,EAGES,EAHFT,gBACAE,EAEEO,EAFFP,OACAI,EACEG,EADFH,U,eCFWQ,EAAY,SAAC,GAAY,IAAVlB,EAAS,EAATA,GAC1B,OACE,wBACEmB,KAAK,SACLC,UAAU,MACVC,QAAS,kBDSbJ,EAAShB,ECTiCD,KAHxC,0GAUSsB,EAAe,SAAC,GAAY,IAAVtB,EAAS,EAATA,GAC7B,OACE,wBACEmB,KAAK,SACLC,UAAU,MACVC,QAAS,kBDAbJ,EAASb,ECAoCJ,KAH3C,8FAUSuB,EAAY,SAAC,GAAY,IAAVvB,EAAS,EAATA,GAC1B,OACE,wBAAQoB,UAAU,MAAMC,QAAS,kBDfnCJ,EAASpB,ECeuDG,KAA9D,8FC/BSwB,EAAW,SAAC,GAAyC,IAAvCxB,EAAsC,EAAtCA,GAAIf,EAAkC,EAAlCA,KAAMkB,EAA4B,EAA5BA,SAC7BsB,EAAQ,CACZC,MAF6D,EAAlBrB,YAEtB,MAAQ,OAC7BsB,UAAYxB,EAAsB,SAAX,SACvByB,mBAAqBzB,EAA4B,OAAjB,eAChC0B,OAAQ,OACRC,MAAO,SAGT,OACE,sBAAKL,MAAO,CAAEM,OAAQ,kBAAmBF,OAAQ,QAAjD,UACE,oBAAIJ,MAAOA,EAAX,SAAmBxC,IACnB,cAAC,EAAD,CAAce,GAAIA,IAClB,cAAC,EAAD,CAAWA,GAAIA,IACf,cAAC,EAAD,CAAWA,GAAIA,QCbRgC,G,MAAW,SAAC,GAAmB,IAAD,IAAhB3C,YAAgB,MAAT,GAAS,EACzC,OACE,oBAAI+B,UAAU,UAAd,SACG/B,EAAKa,KAAI,SAACH,GAAD,OACR,cAAC,EAAD,eAA4BA,GAAbA,EAAKC,WCPfiC,EAAQ,kBAAM,gICCdC,EAAc,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,YACpB7C,EAAoB8C,aAAY,SAACrB,GAAD,OAAWA,EAAMD,cAAjDxB,gBAER,GAAwB,MAApBA,EACF,MAAM,IAAI+C,MAAM,KAElB,OACE,iCACE,uBAAOZ,MAAO,CAAEI,OAAQ,QAAxB,kDACA,uBAAOS,MAAOhD,EAAiBiD,SAAU,SAACC,GAAD,OAAOL,EAAYK,UCPrDC,G,MAAY,SAAC,GAAuC,IAArCxD,EAAoC,EAApCA,KAAMyD,EAA8B,EAA9BA,WAAYC,EAAkB,EAAlBA,YAC5C,OACE,wBACElB,MAAOkB,EACPvB,UAAW,YACXC,QAAS,kBNoBoB,SAACqB,GAAD,OACjCzB,EAASP,EAAUgC,IMrBAE,CAAoBF,IAHrC,SAKGzD,MCTM4D,EAAgB,SAAC,GAA6B,IAA3B1D,EAA0B,EAA1BA,oBACxB2D,EAAc,QACdC,EAAY,qBAEZC,EAAW,CACfC,gBAAyC,IAAxB9D,EAA4B2D,EAAcC,GAGvDG,EAAc,CAClBD,gBAAyC,IAAxB9D,EAA4B2D,EAAcC,GAGvDI,EAAc,CAClBF,gBAAyC,IAAxB9D,EAA4B2D,EAAcC,GAG7D,OACE,gCACE,cAAC,EAAD,CACEJ,YAAaK,EACbN,WAAY,MACZzD,KAAM,4DAER,cAAC,EAAD,CACE0D,YAAaO,EACbR,WAAY,SACZzD,KAAM,0FAER,cAAC,EAAD,CACE0D,YAAaQ,EACbT,WAAY,SACZzD,KAAM,gHC/BDmE,G,MAAS,kBACpB,qBAAKhC,UAAU,SAAf,SACE,sBAAKA,UAAU,cAAf,UACE,wBACA,wBACA,wBACA,+B,QCPOiC,EAAO,WAClB,MAA4CC,mBAAS,IAArD,mBAAOC,EAAP,KAAuBC,EAAvB,KAiBA,OAFAC,QAAQC,IAAIH,GAGV,iCACE,yBACEI,SAlBW,SAACJ,GAChB,MAAuB,KAAnBA,EAiBUI,CAASJ,GACnBpC,KAAK,SACLM,MAAO,CAAEI,OAAQ,QACjBR,QAAS,kBTE0BJ,EAASX,ESFZiD,KAJlC,yGAMoB,OAEpB,uBAAOjB,MAAOiB,EAAgBhB,SAAU,SAACC,GAAD,OAjB3B,SAACA,GAChBA,EAAEoB,iBACFJ,EAAkBhB,EAAEqB,OAAOvB,OAesBwB,CAAStB,U,gCC5BjDuB,EAAb,4MACEtE,MAAQ,CACNuE,UAAU,GAFd,uDAKE,SAAkBC,GAGhB,OAFAR,QAAQC,IAAI,uCAAUO,GAEfC,KAAKC,SAAS,CAAEH,UAAU,MARrC,oBAWE,WAGE,OAFqBE,KAAKzE,MAAlBuE,SAEa,mIACd,qBAAK5C,UAAU,QAAf,SAAwB8C,KAAKE,MAAMC,eAf9C,GAAmCC,aCuCtBC,G,MAAM,WACjB,MAAiEnC,aAC/D,SAACrB,GAAD,OAAWA,EAAMD,cADX3B,EAAR,EAAQA,oBAAqBC,EAA7B,EAA6BA,SAAUC,EAAvC,EAAuCA,KAAMC,EAA7C,EAA6CA,gBAU7C,GANAkF,qBAAU,WC7CV,IAAIC,SAAQ,SAACC,GACXC,YAAW,WACTD,EAAQ,CACN,CACE1E,GAAI,EACJf,KAAM,oGACNoB,aAAa,EACbF,UAAU,GAEZ,CACEH,GAAI,EACJf,KAAM,mKACNoB,aAAa,EACbF,UAAU,GAEZ,CACEH,GAAI,EACJf,KAAM,4LACNoB,aAAa,EACbF,UAAU,GAEZ,CACEH,GAAI,EACJf,KAAM,8HACNoB,aAAa,EACbF,UAAU,EACVyE,cAAe,UAEjB,CACE5E,GAAI,EACJf,KAAM,wMACNoB,aAAa,EACbF,UAAU,EACVyE,cAAe,UAEjB,CACE5E,GAAI,EACJf,KAAM,mFACNoB,aAAa,EACbF,UAAU,EACVyE,cAAe,UAEjB,CACE5E,GAAI,EACJf,KAAM,yIACNoB,aAAa,EACbF,UAAU,EACVyE,cAAe,UAEjB,CACE5E,GAAI,EACJf,KAAM,2GACNoB,aAAa,EACbF,UAAU,EACVyE,cAAe,UAEjB,CACE5E,GAAI,EACJf,KAAM,oFACNoB,aAAa,EACbF,UAAU,EACVyE,cAAe,UAEjB,CACE5E,GAAI,GACJf,KAAM,kFACNoB,aAAa,EACbF,UAAU,EACVyE,cAAe,cAGlB,QDzBOC,MAAK,SAACC,IXjCa,SAACzF,GAAS4B,EAASzB,EAAQH,IWkCtD0F,CAAkBD,QAEnB,KAEE1F,EACH,OAAO,cAAC,EAAD,IAGT,IAAM4F,EApCW,SAAC7F,EAAqBE,EAAMC,GAC7C,IAAI2F,EAYJ,OAV4B,IAAxB9F,IACF8F,EAAU5F,GAEgB,IAAxBF,IACF8F,EAAU5F,EAAKS,QAAO,SAACC,GAAD,OAAUA,EAAKI,aAEX,IAAxBhB,IACF8F,EAAU5F,EAAKS,QAAO,SAACC,GAAD,OAAWA,EAAKI,aAGhB,KAApBb,EACK2F,EAEFA,EAAQnF,QAAO,SAACC,GAAD,OACpBA,EAAKd,KAAKiG,cAAcC,SAAS7F,EAAgB4F,kBAmB9BE,CAAWjG,EAAqBE,EAAMC,GAM3D,OACE,cAAC,EAAD,UACE,sBAAK8B,UAAU,UAAf,UACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,EAAD,CACEe,YAVY,SAACK,IX1CqB,SAAClD,GAC3C2B,EAASrB,EAAmBN,IW0C1B+F,CAA6B7C,EAAEqB,OAAOvB,QAUhChD,gBAAiBA,IAEnB,cAAC,EAAD,CAAeH,oBAAqBA,IACpC,cAAC,EAAD,CAAUE,KAAM2F,WElExBM,IAASC,OACP,cAAC,IAAD,CAAUxE,MAAOA,EAAjB,SACE,cAAC,EAAD,MAEFyE,SAASC,eAAe,W","file":"static/js/main.51da80a4.chunk.js","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst sliceConfig = {\r\n  name: \"btnReducer\",\r\n  initialState: {\r\n    displayedTaskStatus: 1,\r\n    isLoaded: false,\r\n    list: null,\r\n    inputFilerValue: \"\"\r\n  },\r\n  reducers: {\r\n    setList: (state, action) => {\r\n      state.list = action.payload;\r\n      state.isLoaded = true;\r\n    },\r\n    setInputFilerValue: (state, action) => {\r\n      state.inputFilerValue = action.payload;\r\n    },\r\n    toggleDelete: (state, action) => {\r\n      const { list } = state;\r\n      state.list = list.filter((item) => item.id !== action.payload);\r\n    },\r\n    toggleActive: (state, action) => {\r\n      const { list } = state;\r\n      state.list = list.map((item) => {\r\n        const { id, isActive } = item;\r\n\r\n        return {\r\n          ...item,\r\n          isActive: action.payload === id ? !isActive : isActive\r\n        };\r\n      });\r\n    },\r\n    toggleImportant: (state, action) => {\r\n      const { list } = state;\r\n      state.list = list.map((item) => {\r\n        const { id, isImportant } = item;\r\n\r\n        return {\r\n          ...item,\r\n          isImportant: action.payload === id ? !isImportant : isImportant\r\n        };\r\n      });\r\n    },\r\n    btnAdd: (state, action) => {\r\n      const { list } = state;\r\n      let date = Date.now();\r\n      state.list = [\r\n        ...list,\r\n        {\r\n          id: date,\r\n          name: action.payload,\r\n          isImportant: false,\r\n          isActive: true\r\n        }\r\n      ];\r\n    },\r\n    filterBtn: (state, action) => {\r\n      if (action.payload === \"all\") {\r\n        state.displayedTaskStatus = 1;\r\n      }\r\n      if (action.payload === \"active\") {\r\n        state.displayedTaskStatus = 2;\r\n      }\r\n      if (action.payload === \"finish\") {\r\n        state.displayedTaskStatus = 3;\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport const { reducer, actions } = createSlice(sliceConfig);\r\n","import { reducer as btnReducer } from \"./btn-reducers\";\r\n\r\nexport const reducer = {\r\n  btnReducer\r\n};\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport { reducer } from \"./reducers/index\";\r\n\r\nexport const store = configureStore({ reducer });\r\n","import { store } from \"../store\";\r\nimport { actions } from \"../reducers/btn-reducers\";\r\n\r\nconst { dispatch } = store;\r\nconst {\r\n  setList,\r\n  setInputFilerValue,\r\n  toggleDelete,\r\n  toggleActive,\r\n  toggleImportant,\r\n  btnAdd,\r\n  filterBtn\r\n} = actions;\r\n\r\nexport const setListDispatcher = (list) => dispatch(setList(list));\r\n\r\nexport const setInputFilerValueDispatcher = (inputFilerValue) =>\r\n  dispatch(setInputFilerValue(inputFilerValue));\r\n\r\nexport const toggleDeleteDispatcher = (inputId) =>\r\n  dispatch(toggleDelete(inputId));\r\n\r\nexport const toggleActiveDispatcher = (inputId) =>\r\n  dispatch(toggleActive(inputId));\r\n\r\nexport const toggleImportantDispatcher = (inputId) =>\r\n  dispatch(toggleImportant(inputId));\r\n\r\nexport const btnAddDispatcher = (value) => dispatch(btnAdd(value));\r\n\r\nexport const filterBtnDispatcher = (filterType) =>\r\n  dispatch(filterBtn(filterType));\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport {\r\n  toggleDeleteDispatcher,\r\n  toggleActiveDispatcher,\r\n  toggleImportantDispatcher\r\n} from \"../../../../store/dispatchers/btn-dispatchers\";\r\nimport \"./style.scss\";\r\n\r\nexport const BtnActive = ({ id }) => {\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className=\"btn\"\r\n      onClick={() => toggleActiveDispatcher(id)}\r\n    >\r\n      Завершить задачу\r\n    </button>\r\n  );\r\n};\r\n\r\nexport const BtnImportant = ({ id }) => {\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className=\"btn\"\r\n      onClick={() => toggleImportantDispatcher(id)}\r\n    >\r\n      Сделать важной\r\n    </button>\r\n  );\r\n};\r\n\r\nexport const BtnRemove = ({ id }) => {\r\n  return (\r\n    <button className=\"btn\" onClick={() => toggleDeleteDispatcher(id)}>\r\n      Удалить задачу\r\n    </button>\r\n  );\r\n};\r\n\r\nBtnActive.propTypes = {\r\n  id: PropTypes.number.isRequired\r\n};\r\n\r\nBtnImportant.propTypes = {\r\n  id: PropTypes.number.isRequired\r\n};\r\n\r\nBtnRemove.propTypes = {\r\n  id: PropTypes.number.isRequired\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { BtnRemove, BtnImportant, BtnActive } from \"./btn/Btn\";\r\n\r\nexport const TastItem = ({ id, name, isActive, isImportant }) => {\r\n  const style = {\r\n    color: isImportant ? \"red\" : \"#444\",\r\n    fontStyle: !isActive ? \"italic\" : \"normal\",\r\n    textDecorationLine: !isActive ? \"line-through\" : \"none\",\r\n    margin: \"10px\",\r\n    width: \"500px\"\r\n  };\r\n\r\n  return (\r\n    <div style={{ border: \"2px solid green\", margin: \"10px\" }}>\r\n      <li style={style}>{name}</li>\r\n      <BtnImportant id={id} />\r\n      <BtnActive id={id} />\r\n      <BtnRemove id={id} />\r\n    </div>\r\n  );\r\n};\r\n\r\nTastItem.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  isActive: PropTypes.bool.isRequired,\r\n  isImportant: PropTypes.bool.isRequired\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { TastItem } from \"./task-item/TastItem\";\r\nimport \"./style.scss\";\r\n\r\nexport const TaskList = ({ list = [] }) => {\r\n  return (\r\n    <ol className=\"rounded\">\r\n      {list.map((item) => (\r\n        <TastItem key={item.id} {...item} />\r\n      ))}\r\n    </ol>\r\n  );\r\n};\r\n\r\nTaskList.propTypes = {\r\n  list: PropTypes.array.isRequired\r\n};\r\n","import React from \"react\";\r\n\r\nexport const Title = () => <h1>Список дел на лето</h1>;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nexport const FilrerInput = ({ inputFilter }) => {\r\n  const { inputFilerValue } = useSelector((store) => store.btnReducer);\r\n\r\n  if (inputFilerValue === \"3\") {\r\n    throw new Error(\"s\");\r\n  }\r\n  return (\r\n    <form>\r\n      <label style={{ margin: \"10px\" }}>Фильтр</label>\r\n      <input value={inputFilerValue} onChange={(e) => inputFilter(e)} />\r\n    </form>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { filterBtnDispatcher } from \"../../../store/dispatchers/btn-dispatchers\";\r\nimport \"./style.scss\";\r\n\r\nexport const BtnFilter = ({ name, filterType, activeStyle }) => {\r\n  return (\r\n    <button\r\n      style={activeStyle}\r\n      className={\"btnFilter\"}\r\n      onClick={() => filterBtnDispatcher(filterType)}\r\n    >\r\n      {name}\r\n    </button>\r\n  );\r\n};\r\n\r\nBtnFilter.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  filterType: PropTypes.string.isRequired,\r\n  activeStyle: PropTypes.object.isRequired\r\n};\r\n","import React from \"react\";\r\nimport { BtnFilter } from \"./btn-filter/BtnFilter\";\r\n\r\nexport const BtnFilterList = ({ displayedTaskStatus }) => {\r\n  const activeColor = \"white\";\r\n  const mainColor = \"rgb(136, 213, 248)\";\r\n\r\n  const styleAll = {\r\n    backgroundColor: displayedTaskStatus === 1 ? activeColor : mainColor\r\n  };\r\n\r\n  const styleActive = {\r\n    backgroundColor: displayedTaskStatus === 2 ? activeColor : mainColor\r\n  };\r\n\r\n  const styleFinish = {\r\n    backgroundColor: displayedTaskStatus === 3 ? activeColor : mainColor\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <BtnFilter\r\n        activeStyle={styleAll}\r\n        filterType={\"all\"}\r\n        name={\"Все задачи\"}\r\n      />\r\n      <BtnFilter\r\n        activeStyle={styleActive}\r\n        filterType={\"active\"}\r\n        name={\"Активные задачи\"}\r\n      />\r\n      <BtnFilter\r\n        activeStyle={styleFinish}\r\n        filterType={\"finish\"}\r\n        name={\"Завершенные задачи\"}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport \"./style.scss\";\r\n\r\nexport const Loader = () => (\r\n  <div className=\"loader\">\r\n    <div className=\"ldsEllipsis\">\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n      <div></div>\r\n    </div>\r\n  </div>\r\n);\r\n","import React, { useState } from \"react\";\r\nimport { btnAddDispatcher } from \"../../store/dispatchers/btn-dispatchers\";\r\nexport const Form = () => {\r\n  const [inputFormValue, setInputFormValue] = useState(\"\");\r\n\r\n  const disabled = (inputFormValue) => {\r\n    if (inputFormValue === \"\") {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const inputAdd = (e) => {\r\n    e.preventDefault();\r\n    setInputFormValue(e.target.value);\r\n  };\r\n\r\n  console.log(inputFormValue);\r\n\r\n  return (\r\n    <form>\r\n      <button\r\n        disabled={disabled(inputFormValue)}\r\n        type=\"button\"\r\n        style={{ margin: \"10px\" }}\r\n        onClick={() => btnAddDispatcher(inputFormValue)}\r\n      >\r\n        Добавить задание:{\" \"}\r\n      </button>\r\n      <input value={inputFormValue} onChange={(e) => inputAdd(e)} />\r\n    </form>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\n\r\nexport class ErrorBoundary extends Component {\r\n  state = {\r\n    hasError: false\r\n  };\r\n\r\n  componentDidCatch(error) {\r\n    console.log(\"ошибка\", error);\r\n\r\n    return this.setState({ hasError: true });\r\n  }\r\n\r\n  render() {\r\n    const { hasError } = this.state;\r\n\r\n    if (hasError) return <div>Что то пошло не так..</div>;\r\n    return <div className=\"error\">{this.props.children}</div>;\r\n  }\r\n}\r\n","import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { getList } from \"./components/parts/list-getter\";\nimport {\n  TaskList,\n  Title,\n  FilrerInput,\n  BtnFilterList,\n  Loader,\n  Form,\n  ErrorBoundary\n} from \"./components\";\nimport {\n  setListDispatcher,\n  setInputFilerValueDispatcher\n} from \"./store/dispatchers/btn-dispatchers\";\n\nimport \"./styles.css\";\n\nconst filterList = (displayedTaskStatus, list, inputFilerValue) => {\n  let newList;\n\n  if (displayedTaskStatus === 1) {\n    newList = list;\n  }\n  if (displayedTaskStatus === 2) {\n    newList = list.filter((item) => item.isActive);\n  }\n  if (displayedTaskStatus === 3) {\n    newList = list.filter((item) => !item.isActive);\n  }\n\n  if (inputFilerValue === \"\") {\n    return newList;\n  }\n  return newList.filter((item) =>\n    item.name.toLowerCase().includes(inputFilerValue.toLowerCase())\n  );\n};\n\nexport const App = () => {\n  const { displayedTaskStatus, isLoaded, list, inputFilerValue } = useSelector(\n    (store) => store.btnReducer\n  );\n\n  useEffect(() => {\n    getList().then((data) => {\n      setListDispatcher(data);\n    });\n  }, []);\n\n  if (!isLoaded) {\n    return <Loader />;\n  }\n\n  const filteredList = filterList(displayedTaskStatus, list, inputFilerValue);\n\n  const inputFilter = (e) => {\n    setInputFilerValueDispatcher(e.target.value);\n  };\n\n  return (\n    <ErrorBoundary>\n      <div className=\"wrapper\">\n        <Title />\n        <Form />\n        <FilrerInput\n          inputFilter={inputFilter}\n          inputFilerValue={inputFilerValue}\n        />\n        <BtnFilterList displayedTaskStatus={displayedTaskStatus} />\n        <TaskList list={filteredList} />\n      </div>\n    </ErrorBoundary>\n  );\n};\n","export const getList = () =>\r\n  new Promise((resolve) => {\r\n    setTimeout(() => {\r\n      resolve([\r\n        {\r\n          id: 1,\r\n          name: \"Встретить рассвет\",\r\n          isImportant: false,\r\n          isActive: true\r\n        },\r\n        {\r\n          id: 2,\r\n          name: \"Выпить вино в хорошей компании\",\r\n          isImportant: true,\r\n          isActive: true\r\n        },\r\n        {\r\n          id: 3,\r\n          name: \"Сыграть в новую настолку с друзьями\",\r\n          isImportant: false,\r\n          isActive: true\r\n        },\r\n        {\r\n          id: 4,\r\n          name: \"съездить в новую страну\",\r\n          isImportant: true,\r\n          isActive: true,\r\n          displayedList: \"active\"\r\n        },\r\n        {\r\n          id: 5,\r\n          name: \"выбросить все лишние вещи из квартиры\",\r\n          isImportant: false,\r\n          isActive: true,\r\n          displayedList: \"active\"\r\n        },\r\n        {\r\n          id: 6,\r\n          name: \"сходить в поход\",\r\n          isImportant: false,\r\n          isActive: true,\r\n          displayedList: \"active\"\r\n        },\r\n        {\r\n          id: 7,\r\n          name: \"покататься на велосипеде\",\r\n          isImportant: false,\r\n          isActive: true,\r\n          displayedList: \"active\"\r\n        },\r\n        {\r\n          id: 8,\r\n          name: \"попрыгать на батуте\",\r\n          isImportant: false,\r\n          isActive: true,\r\n          displayedList: \"active\"\r\n        },\r\n        {\r\n          id: 9,\r\n          name: \"прочитать 5 книг\",\r\n          isImportant: false,\r\n          isActive: true,\r\n          displayedList: \"active\"\r\n        },\r\n        {\r\n          id: 10,\r\n          name: \"сменить работу\",\r\n          isImportant: false,\r\n          isActive: true,\r\n          displayedList: \"active\"\r\n        }\r\n      ]);\r\n    }, 1000);\r\n  });\r\n","import ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\n\nimport { store } from \"./store/store\";\nimport { App } from \"./App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}